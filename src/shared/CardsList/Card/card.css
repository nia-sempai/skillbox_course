.card {
    background-color: var(--white);
    border-radius: 7px;
    display: flex;
    flex-flow: row wrap;
    position: relative;
}

.card > *, .textContent > * {
    flex: 1 1 100%;
}

.textContent {
    display: flex;
    flex-flow: row wrap;
    padding: 22px 20px 13px;
    position: relative;
}

.metaData {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    font-size: 10px;
    line-height: 12px;
}

.userLink {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    height: 20px;
    padding: 0 6px 0 0;
}

.avatar {
    border-radius: 20px;
    width: 20px;
    height: 20px;
    margin: 0 7px 0 0;
}

.username {
    color: var(--orange);
}

.createdAt, .createdAt * {
    color: var(--grey99);
}

.title {
    font-size: 16px;
    line-height: 19px;
    font-weight: normal;
    margin: 0;
    padding: 7px 0 0;
}

.postLink {
    overflow: hidden;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
}

.preview {
    max-height: 178px;
}

.previewImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.menu {
    position: absolute;
    top: 17px;
    right: 15px;
}

.menuButton {
    width: 31px;
    height: 31px;
    display: flex;
    align-items: center;
    justify-content: center;
    transform: rotate(90deg);
    border-radius: 31px;
    background: transparent;
    border: 0;
}
.menuButton:active, .menuButton:hover {
    background-color: rgba(51, 51, 51, 0.1);
}

.controls {
    padding: 10px 20px;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
}

.karmaCounter > * + * {
    padding: 0 0 0 4px;
}

.karmaValue {
    color: var(--greyC4);
}

svg.down {
    transform: rotate(180deg);
}

.commentsButton {
    display: flex;
    align-items: normal;
}
.commentsButton * {
    color: var(--greyC4);
}

.commentsNumber {
    padding: 0 0 0 6px;
    font-size: 12px;
    line-height: 14px;
}

.controls {
    position: relative;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
}

.actions {
    display: flex;
    flex-flow: row nowrap;
}

.actions > * + * {
    margin: 0 0 0 13px;
}

.saveButton {
    width: 20px;
    height: 20px;
}

.shareButton {
    margin-right: 15px;
    width: 20px;
    height: 20px;
}

.publishedLabel {
    display: none;
}

@media all and (min-width: 1024px) {
    .commentsButton {
        display: none;
    }

    .textContent {
        flex-basis: 540px;
        order: 1;
        margin: 0 0 0 38px;
        flex-flow: column-reverse nowrap;
        justify-content: center;
    }
    .textContent > * {
        flex: 0 0;
    }

    .metaData {
        flex-flow: row-reverse nowrap;
        justify-content: flex-end;
        font-size: 14px;
        line-height: 16px;
    }

    .publishedLabel {
        display: inline;
    }

    .preview {
        flex-basis: 190px;
        order:      0;
        margin:     0;
    }

    .menu {
        position: relative;
        order: 2;
        display: flex;
        align-items: center;
        flex: 0 0;
        top: unset;
        right: unset;
        margin: 0 0 0 auto;
    }

    .menuButton {
        align-self: center;
        transform: unset;
    }

    .controls {
        order: 3;
        flex: 0 0;
        margin: 0 0 0 24px;
    }

    .actions {
        display: none;
    }

    .card {
        background-color: transparent;
        flex-flow: row nowrap;
        max-height: 107px;
        padding: 0 40px;
    }
    .card > * + * {
        padding: 0;
    }

    .karmaCounter {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-flow: column nowrap;
    }
    .karmaCounter > * + * {
        padding: 7px 0 0;
    }

    .karmaValue {
        font-size: 14px;
        line-height: 16px;
        color: var(--black);
    }
}

@media all and (min-width: 1540px) {
    .card {
        padding: 0px 60px;
    }

    .card:hover, .card:focus-within {
        outline: 1px solid var(--greyC4);
    }

    .textContent {
        flex-basis: 672px;
    }

    .userLink:hover a {
        text-decoration: underline;
    }

    .menuButton:hover {
        background-color: rgba(51, 51, 51, 0.1);
    }

    .karmaCounter > button.up:hover > svg > path {
        fill: var(--green);
    }

    .karmaCounter > button.down:hover > svg > path {
        fill: var(--orange);
    }
}